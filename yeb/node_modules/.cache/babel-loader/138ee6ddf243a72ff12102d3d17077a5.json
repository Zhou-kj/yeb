{"ast":null,"code":"import axios from 'axios';\nimport { Message } from 'element-ui';\nimport router from '../router'; // 请求拦截器\n\naxios.interceptors.request.use(config => {\n  if (window.sessionStorage.getItem('tokenStr')) {\n    config.headers['Authorization'] = window.sessionStorage.getItem('tokenStr');\n  }\n\n  return config;\n}, error => {\n  console.log(error);\n}); // 响应拦截器\n\naxios.interceptors.response.use(success => {\n  if (success.data.status == 1) {\n    Message.error({\n      message: success.data.message\n    });\n    return;\n  }\n\n  if (success.data.message) {\n    Message.success({\n      message: success.data.message\n    });\n  }\n\n  return success.data;\n}, error => {\n  if (error.response.status == 504 || error.response.status == 404) {\n    Message.error({\n      message: '服务器被吃了!!!'\n    });\n  } else if (error.response.status == 403) {\n    Message.error({\n      message: '权限不足，请联系管理员！'\n    });\n  } else if (error.response.status == 401) {\n    Message.error({\n      message: '尚未登录，请先登录！'\n    });\n    router.replace('/login');\n  } else {\n    if (error.response.data) {\n      Message.error({\n        message: error.response.data.message\n      });\n    } else {\n      Message.error({\n        message: '未知错误！'\n      });\n    }\n  }\n\n  return;\n});\nlet base = 'http://localhost:8081';\nexport const postRequest = (url, params) => {\n  return axios({\n    method: 'post',\n    url: `${base}${url}`,\n    data: params\n  });\n};\nexport const putRequest = (url, params) => {\n  return axios({\n    method: 'put',\n    url: `${base}${url}`,\n    data: params\n  });\n};\nexport const getRequest = (url, params) => {\n  return axios({\n    method: 'get',\n    url: `${base}${url}`,\n    data: params\n  });\n};\nexport const deleteRequest = (url, params) => {\n  return axios({\n    method: 'delete',\n    url: `${base}${url}`,\n    data: params\n  });\n};","map":{"version":3,"names":["axios","Message","router","interceptors","request","use","config","window","sessionStorage","getItem","headers","error","console","log","response","success","data","status","message","replace","base","postRequest","url","params","method","putRequest","getRequest","deleteRequest"],"sources":["E:/web-code/yeb/src/utils/api.js"],"sourcesContent":["import axios from 'axios'\r\nimport { Message } from 'element-ui'\r\nimport router from '../router'\r\n\r\n\r\n// 请求拦截器\r\naxios.interceptors.request.use(config => {\r\n    if (window.sessionStorage.getItem('tokenStr')) {\r\n        config.headers['Authorization'] = window.sessionStorage.getItem('tokenStr')\r\n    }\r\n    return config\r\n}, error => {\r\n    console.log(error)\r\n})\r\n\r\n\r\n// 响应拦截器\r\naxios.interceptors.response.use(success => {\r\n    if (success.data.status == 1) {\r\n        Message.error({ message: success.data.message })\r\n        return\r\n    }\r\n    if (success.data.message) {\r\n        Message.success({ message: success.data.message })\r\n    }\r\n    return success.data\r\n}, error => {\r\n    if (error.response.status == 504 || error.response.status == 404) {\r\n        Message.error({ message: '服务器被吃了!!!' })\r\n    } else if (error.response.status == 403) {\r\n        Message.error({ message: '权限不足，请联系管理员！' })\r\n    } else if (error.response.status == 401) {\r\n        Message.error({ message: '尚未登录，请先登录！' })\r\n        router.replace('/login')\r\n    } else {\r\n        if (error.response.data) {\r\n            Message.error({ message: error.response.data.message })\r\n        } else {\r\n            Message.error({ message: '未知错误！' })\r\n        }\r\n    }\r\n    return\r\n})\r\n\r\n\r\n\r\nlet base = 'http://localhost:8081'\r\n\r\nexport const postRequest = (url, params) => {\r\n    return axios({\r\n        method: 'post',\r\n        url: `${base}${url}`,\r\n        data: params\r\n    })\r\n}\r\n\r\nexport const putRequest = (url, params) => {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${base}${url}`,\r\n        data: params,\r\n    })\r\n}\r\n\r\nexport const getRequest = (url, params) => {\r\n    return axios({\r\n        method: 'get',\r\n        url: `${base}${url}`,\r\n        data: params,\r\n    })\r\n}\r\n\r\nexport const deleteRequest = (url, params) => {\r\n    return axios({\r\n        method: 'delete',\r\n        url: `${base}${url}`,\r\n        data: params,\r\n    })\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}