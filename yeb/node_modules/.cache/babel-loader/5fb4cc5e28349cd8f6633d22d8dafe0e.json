{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport { postRequest } from '../utils/api';\nimport { Notification } from 'element-ui'; // import SockJS from 'sockjs-client'\n// import Stomp from 'stompjs'\n\nVue.use(Vuex);\nconst now = new Date();\nconst store = new Vuex.Store({\n  state: {\n    routes: [],\n    sessions: {},\n    // 聊天信息 'zhangsan#lisi':[{}]\n    admins: [],\n    // 左侧用户列表\n    currentAdmin: null,\n    // 当前用户\n    currentSession: null,\n    //  选中的用户对象\n    filterKey: '',\n    ws: null,\n    // 在线聊天-定义对象\n    isDot: {} // 未读消息 对象\n\n  },\n  mutations: {\n    // 与 state 同步执行；可以改变 state 对应的值的方法\n    // 编辑用户 同步用户信息\n    INIT_ADMIN(state, admin) {\n      state.currentAdmin = admin;\n    },\n\n    // 初始化路由 菜单\n    initRoutes(state, data) {\n      state.routes = data;\n    },\n\n    changeCurrentSession(state, currentSession) {\n      state.currentSession = currentSession; // 已读消息 小红点消失\n\n      Vue.set(state.isDot, state.currentAdmin.username + '#' + state.currentSession.username, false);\n    },\n\n    addMessage(state, msg) {\n      state.currentAdmin = window.sessionStorage.getItem('user');\n      console.log(state.currentAdmin, '????');\n      let mss = state.sessions[state.currentAdmin.username + '#' + msg.to];\n\n      if (!mss) {\n        Vue.set(state.sessions, state.currentAdmin.username + '#' + msg.to, []);\n      }\n\n      state.sessions[state.currentAdmin.username + '#' + msg.to].push({\n        content: msg.content,\n        date: new Date(),\n        self: !msg.notSelf // 不是自己\n\n      });\n    },\n\n    INIT_DATA(state) {\n      // 浏览器本地的历史聊天记录\n      let data = localStorage.getItem('vue-chat-session');\n\n      if (data) {\n        state.sessions = JSON.parse(data);\n      }\n    },\n\n    // 初始化数据\n    INIT_ADMINS(state, data) {\n      state.admins = data;\n    }\n\n  },\n  // 异步执行\n  actions: {\n    //  在线聊天; context 上下文\n    connect(context) {\n      let token = window.sessionStorage.getItem('tokenStr');\n      context.state.ws = new WebSocket(\"ws://localhost:3000\");\n\n      context.state.ws.onopen = function () {\n        console.log('连接成功！');\n        let obj = new Object();\n        obj.token = token;\n        context.state.ws.send(JSON.stringify(obj));\n      };\n\n      context.state.ws.onmessage = function (e) {\n        console.log(e.data, '!!');\n\n        if (e.data == 401) {\n          Vue.$router.replace('/');\n        }\n\n        let receiveMsg = JSON.parse(e.data);\n\n        if (!context.state.currentSession || receiveMsg.from != context.state.currentSession.username) {\n          Notification.info({\n            title: '【' + receiveMsg.fromname + '】 发来一条消息',\n            message: receiveMsg.content.length > 10 ? receiveMsg.content.substr(0, 10) : receiveMsg.content,\n            position: 'bottom-right'\n          });\n          Vue.set(context.state.isDot, context.state.currentAdmin.username + '#' + receiveMsg.from, true);\n        }\n\n        receiveMsg.notSelf = true;\n        receiveMsg.to = receiveMsg.from;\n        context.commit('addMessage', receiveMsg);\n      }; // window.onbeforeunload = function () {\n      //     ws.close()\n      // }\n      // context.state.ws.onclose = function () {\n      // }\n\n    },\n\n    initData(context) {\n      context.commit('INIT_DATA'); // 调用接口获取数据\n\n      const temp = {\n        id: JSON.parse(window.sessionStorage.getItem('user')).id\n      };\n      postRequest('/chat/admin', temp).then(resp => {\n        if (resp) {\n          context.commit('INIT_ADMINS', resp);\n        }\n      });\n    }\n\n  }\n});\nstore.watch(function (state) {\n  return state.sessions;\n}, function (val) {\n  console.log('CHANGE: ', val);\n  localStorage.setItem('vue-chat-session', JSON.stringify(val));\n}, {\n  deep: true\n  /*这个貌似是开启watch监测的判断,官方说明也比较模糊*/\n\n});\nexport default store;","map":{"version":3,"names":["Vue","Vuex","postRequest","Notification","use","now","Date","store","Store","state","routes","sessions","admins","currentAdmin","currentSession","filterKey","ws","isDot","mutations","INIT_ADMIN","admin","initRoutes","data","changeCurrentSession","set","username","addMessage","msg","window","sessionStorage","getItem","console","log","mss","to","push","content","date","self","notSelf","INIT_DATA","localStorage","JSON","parse","INIT_ADMINS","actions","connect","context","token","WebSocket","onopen","obj","Object","send","stringify","onmessage","e","$router","replace","receiveMsg","from","info","title","fromname","message","length","substr","position","commit","initData","temp","id","then","resp","watch","val","setItem","deep"],"sources":["E:/web-code/yeb/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport { postRequest } from '../utils/api'\r\nimport { Notification } from 'element-ui'\r\n// import SockJS from 'sockjs-client'\r\n// import Stomp from 'stompjs'\r\n\r\nVue.use(Vuex)\r\n\r\nconst now = new Date()\r\n\r\nconst store = new Vuex.Store({\r\n    state: {\r\n        routes: [],\r\n        sessions: {}, // 聊天信息 'zhangsan#lisi':[{}]\r\n        admins: [], // 左侧用户列表\r\n        currentAdmin: null, // 当前用户\r\n        currentSession: null, //  选中的用户对象\r\n        filterKey: '',\r\n        ws: null, // 在线聊天-定义对象\r\n        isDot: {} // 未读消息 对象\r\n    },\r\n\r\n    mutations: { // 与 state 同步执行；可以改变 state 对应的值的方法\r\n        // 编辑用户 同步用户信息\r\n        INIT_ADMIN(state, admin) {\r\n            state.currentAdmin = admin\r\n        },\r\n        // 初始化路由 菜单\r\n        initRoutes(state, data) {\r\n            state.routes = data\r\n        },\r\n        changeCurrentSession(state, currentSession) {\r\n            state.currentSession = currentSession\r\n            // 已读消息 小红点消失\r\n            Vue.set(state.isDot, state.currentAdmin.username + '#' + state.currentSession.username, false)\r\n        },\r\n        addMessage(state, msg) {\r\n            state.currentAdmin = window.sessionStorage.getItem('user')\r\n            console.log(state.currentAdmin, '????')\r\n            let mss = state.sessions[state.currentAdmin.username + '#' + msg.to]\r\n            if (!mss) {\r\n                Vue.set(state.sessions, state.currentAdmin.username + '#' + msg.to, [])\r\n            }\r\n            state.sessions[state.currentAdmin.username + '#' + msg.to].push\r\n                ({\r\n                    content: msg.content,\r\n                    date: new Date(),\r\n                    self: !msg.notSelf // 不是自己\r\n                })\r\n        },\r\n        INIT_DATA(state) {\r\n            // 浏览器本地的历史聊天记录\r\n            let data = localStorage.getItem('vue-chat-session');\r\n            if (data) {\r\n                state.sessions = JSON.parse(data)\r\n            }\r\n        },\r\n        // 初始化数据\r\n        INIT_ADMINS(state, data) {\r\n            state.admins = data\r\n        }\r\n    },\r\n\r\n    // 异步执行\r\n    actions: {\r\n        //  在线聊天; context 上下文\r\n        connect(context) {\r\n            let token = window.sessionStorage.getItem('tokenStr')\r\n            context.state.ws = new WebSocket(\"ws://localhost:3000\")\r\n            context.state.ws.onopen = function () {\r\n                console.log('连接成功！')\r\n                let obj = new Object()\r\n                obj.token = token\r\n                context.state.ws.send(JSON.stringify(obj))\r\n            }\r\n            context.state.ws.onmessage = function (e) {\r\n                console.log(e.data, '!!')\r\n                if (e.data == 401) {\r\n                    Vue.$router.replace('/')\r\n                }\r\n                let receiveMsg = JSON.parse(e.data)\r\n                if (!context.state.currentSession || receiveMsg.from != context.state.currentSession.username) {\r\n                    Notification.info({\r\n                        title: '【' + receiveMsg.fromname + '】 发来一条消息',\r\n                        message: receiveMsg.content.length > 10 ? receiveMsg.content.substr(0, 10) : receiveMsg.content,\r\n                        position: 'bottom-right'\r\n                    })\r\n                    Vue.set(context.state.isDot, context.state.currentAdmin.username + '#' + receiveMsg.from, true)\r\n                }\r\n                receiveMsg.notSelf = true\r\n                receiveMsg.to = receiveMsg.from\r\n                context.commit('addMessage', receiveMsg)\r\n            }\r\n            // window.onbeforeunload = function () {\r\n            //     ws.close()\r\n            // }\r\n            // context.state.ws.onclose = function () {\r\n\r\n            // }\r\n        },\r\n        initData(context) {\r\n            context.commit('INIT_DATA')\r\n            // 调用接口获取数据\r\n            const temp = {\r\n                id: JSON.parse(window.sessionStorage.getItem('user')).id\r\n            }\r\n            postRequest('/chat/admin', temp).then(resp => {\r\n                if (resp) {\r\n                    context.commit('INIT_ADMINS', resp)\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\nstore.watch(function (state) {\r\n    return state.sessions\r\n}, function (val) {\r\n    console.log('CHANGE: ', val)\r\n    localStorage.setItem('vue-chat-session', JSON.stringify(val));\r\n}, {\r\n    deep: true/*这个貌似是开启watch监测的判断,官方说明也比较模糊*/\r\n})\r\nexport default store"],"mappings":"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"},"metadata":{},"sourceType":"module"}