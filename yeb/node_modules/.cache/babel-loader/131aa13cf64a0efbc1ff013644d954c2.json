{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport { getRequest } from '../utils/api';\nimport { Message } from 'element-ui';\nVue.use(Vuex);\nconst now = new Date();\nconst store = new Vuex.Store({\n  state: {\n    routes: [],\n    sessions: {},\n    // sessions: [],\n    // 1-1 用来接收后端接口返回的数据\n    admins: [],\n    currentAdmin: JSON.parse(window.sessionStorage.getItem('user')),\n    // 当前用户\n    currentSession: null,\n    // currentSession: -1,\n    filterKey: '',\n    stomp: null,\n    // 2-2 在线聊天-定义对象\n    idDot: {} // 未读消息 对象\n\n  },\n  mutations: {\n    // 与 state 同步执行；可以改变 state 对应的值的方法\n    // 编辑用户 同步用户信息\n    INIT_ADMIN(state, admin) {\n      state.currentAdmin = admin;\n    },\n\n    // 初始化路由 菜单\n    initRoutes(state, data) {\n      state.routes = data;\n    },\n\n    changecurrentSession(state, currentSession) {\n      state.currentSession = currentSession; // 已读消息 小红点消失\n\n      Vue.set(state.idDot, state.currentAdmin.username + '#' + state.currentSession.username, false);\n    },\n\n    addMessage(state, msg) {\n      let mss = state.sessions[state.currentAdmin.username + '#' + msg.to];\n\n      if (!mss) {\n        // state.sessions[state.currentAdmin.username + '#' + msg.to] = []\n        Vue.set(state.sessions, state.currentAdmin.username + '#' + msg.to, []);\n      }\n\n      state.sessions[state.currentAdmin.username + '#' + msg.to].push({\n        content: msg.content,\n        date: new Date(),\n        self: !msg.notSelf // 不是自己\n\n      });\n    },\n\n    INIT_DATA(state) {\n      // 1-2 注释这一段 浏览器本地的历史聊天记录\n      let data = localStorage.getItem('vue-chat-session'); //console.log(data)\n\n      if (data) {\n        state.sessions = JSON.parse(data);\n      }\n    },\n\n    // 1-3 初始化数据\n    INIT_ADMINS(state, data) {\n      state.admins = data;\n    }\n\n  },\n  // 异步执行\n  actions: {\n    // 2-3 在线聊天; context 上下文\n    connect(context) {\n      context.state.stomp = Stomp.over(new SockJS('/ws/ep')); // 连接端点\n\n      let token = window.sessionStorage.getItem('tokenStr');\n      context.state.stomp.connect({\n        'Auth-Token': token\n      }, success => {\n        // 把 token 放进去\n        context.state.stomp.subscribe('/user/queue/chat', msg => {\n          // 订阅消息频道\n          // console.log(msg.body)\n          let receiveMsg = JSON.parse(msg.body); // 有消息发来，右下角 弹框提示\n\n          if (!context.state.currentSession || receiveMsg.from !== context.state.currentSession.username) {\n            Notification.info({\n              title: '【' + receiveMsg.formNickName + '】发来一条消息',\n              message: receiveMsg.content.length > 10 ? receiveMsg.content.substr(0, 10) : receiveMsg.content,\n              position: 'bottom-right'\n            }); // 有未读消息 展示小红点\n\n            Vue.set(context.state.idDot, context.state.currentAdmin.username + '#' + receiveMsg.from, true);\n          }\n\n          receiveMsg.notSelf = true;\n          receiveMsg.to = receiveMsg.from;\n          context.commit('addMessage', receiveMsg); // 接收\n        });\n      }, error => {});\n    },\n\n    initData(context) {\n      // context.commit('INIT_DATA')\n      // 调用接口获取数据\n      getRequest('/chat/admin', 1).then(resp => {\n        if (resp) {\n          Message.success({\n            message: resp\n          });\n          context.commit('INIT_ADMINS', resp);\n        }\n      });\n    }\n\n  }\n});\nstore.watch(function (state) {\n  return state.sessions;\n}, function (val) {\n  console.log('CHANGE: ', val);\n  localStorage.setItem('vue-chat-session', JSON.stringify(val));\n}, {\n  deep: true\n  /*这个貌似是开启watch监测的判断,官方说明也比较模糊*/\n\n});\nexport default store;","map":{"version":3,"names":["Vue","Vuex","getRequest","Message","use","now","Date","store","Store","state","routes","sessions","admins","currentAdmin","JSON","parse","window","sessionStorage","getItem","currentSession","filterKey","stomp","idDot","mutations","INIT_ADMIN","admin","initRoutes","data","changecurrentSession","set","username","addMessage","msg","mss","to","push","content","date","self","notSelf","INIT_DATA","localStorage","INIT_ADMINS","actions","connect","context","Stomp","over","SockJS","token","success","subscribe","receiveMsg","body","from","Notification","info","title","formNickName","message","length","substr","position","commit","error","initData","then","resp","watch","val","console","log","setItem","stringify","deep"],"sources":["E:/web-code/yeb/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport { getRequest } from '../utils/api'\r\nimport { Message } from 'element-ui'\r\n\r\nVue.use(Vuex)\r\n\r\nconst now = new Date()\r\n\r\nconst store = new Vuex.Store({\r\n    state: {\r\n        routes: [],\r\n        sessions: {},\r\n        // sessions: [],\r\n        // 1-1 用来接收后端接口返回的数据\r\n        admins: [],\r\n        currentAdmin: JSON.parse(window.sessionStorage.getItem('user')), // 当前用户\r\n        currentSession: null,\r\n        // currentSession: -1,\r\n        filterKey: '',\r\n        stomp: null, // 2-2 在线聊天-定义对象\r\n        idDot: {} // 未读消息 对象\r\n    },\r\n\r\n    mutations: { // 与 state 同步执行；可以改变 state 对应的值的方法\r\n        // 编辑用户 同步用户信息\r\n        INIT_ADMIN(state, admin) {\r\n            state.currentAdmin = admin\r\n        },\r\n        // 初始化路由 菜单\r\n        initRoutes(state, data) {\r\n            state.routes = data\r\n        },\r\n        changecurrentSession(state, currentSession) {\r\n            state.currentSession = currentSession;\r\n            // 已读消息 小红点消失\r\n            Vue.set(state.idDot, state.currentAdmin.username + '#' + state.currentSession.username, false)\r\n        },\r\n        addMessage(state, msg) {\r\n            let mss = state.sessions[state.currentAdmin.username + '#' + msg.to]\r\n            if (!mss) {\r\n                // state.sessions[state.currentAdmin.username + '#' + msg.to] = []\r\n                Vue.set(state.sessions, state.currentAdmin.username + '#' + msg.to, [])\r\n            }\r\n            state.sessions[state.currentAdmin.username + '#' + msg.to].push\r\n                ({\r\n                    content: msg.content,\r\n                    date: new Date(),\r\n                    self: !msg.notSelf // 不是自己\r\n                })\r\n        },\r\n        INIT_DATA(state) {\r\n            // 1-2 注释这一段 浏览器本地的历史聊天记录\r\n            let data = localStorage.getItem('vue-chat-session');\r\n            //console.log(data)\r\n            if (data) {\r\n                state.sessions = JSON.parse(data)\r\n            }\r\n        },\r\n        // 1-3 初始化数据\r\n        INIT_ADMINS(state, data) {\r\n            state.admins = data\r\n        }\r\n    },\r\n\r\n    // 异步执行\r\n    actions: {\r\n        // 2-3 在线聊天; context 上下文\r\n        connect(context) {\r\n            context.state.stomp = Stomp.over(new SockJS('/ws/ep')) // 连接端点\r\n            let token = window.sessionStorage.getItem('tokenStr')\r\n            context.state.stomp.connect({ 'Auth-Token': token }, success => { // 把 token 放进去\r\n                context.state.stomp.subscribe('/user/queue/chat', msg => { // 订阅消息频道\r\n                    // console.log(msg.body)\r\n                    let receiveMsg = JSON.parse(msg.body)\r\n                    // 有消息发来，右下角 弹框提示\r\n                    if (!context.state.currentSession || receiveMsg.from !== context.state.currentSession.username) {\r\n                        Notification.info({\r\n                            title: '【' + receiveMsg.formNickName + '】发来一条消息',\r\n                            message: receiveMsg.content.length > 10 ? receiveMsg.content.substr(0, 10) : receiveMsg.content,\r\n                            position: 'bottom-right'\r\n                        })\r\n                        // 有未读消息 展示小红点\r\n                        Vue.set(context.state.idDot, context.state.currentAdmin.username + '#' + receiveMsg.from, true)\r\n                    }\r\n                    receiveMsg.notSelf = true\r\n                    receiveMsg.to = receiveMsg.from\r\n                    context.commit('addMessage', receiveMsg) // 接收\r\n                })\r\n            }, error => {\r\n            })\r\n        },\r\n        initData(context) {\r\n            // context.commit('INIT_DATA')\r\n            // 调用接口获取数据\r\n            getRequest('/chat/admin', 1).then(resp => {\r\n                if (resp) {\r\n                    Message.success({ message: resp })\r\n                    context.commit('INIT_ADMINS', resp)\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\nstore.watch(function (state) {\r\n    return state.sessions\r\n}, function (val) {\r\n    console.log('CHANGE: ', val)\r\n    localStorage.setItem('vue-chat-session', JSON.stringify(val));\r\n}, {\r\n    deep: true/*这个貌似是开启watch监测的判断,官方说明也比较模糊*/\r\n})\r\nexport default store"],"mappings":"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"},"metadata":{},"sourceType":"module"}