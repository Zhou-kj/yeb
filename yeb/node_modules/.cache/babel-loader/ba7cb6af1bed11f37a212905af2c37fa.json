{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport { postRequest } from '../utils/api'; // import SockJS from 'sockjs-client'\n// import Stomp from 'stompjs'\n\nVue.use(Vuex);\nconst now = new Date();\nconst store = new Vuex.Store({\n  state: {\n    routes: [],\n    sessions: {},\n    // 聊天信息 'zhangsan#lisi':[{}]\n    admins: [],\n    // 左侧用户列表\n    currentAdmin: JSON.parse(window.sessionStorage.getItem('user'))[0],\n    // 当前用户\n    currentSession: null,\n    //  选中的用户对象\n    filterKey: '',\n    ws: null,\n    // 在线聊天-定义对象\n    idDot: {} // 未读消息 对象\n\n  },\n  mutations: {\n    // 与 state 同步执行；可以改变 state 对应的值的方法\n    // 编辑用户 同步用户信息\n    INIT_ADMIN(state, admin) {\n      state.currentAdmin = admin;\n    },\n\n    // 初始化路由 菜单\n    initRoutes(state, data) {\n      state.routes = data;\n    },\n\n    changeCurrentSession(state, currentSession) {\n      state.currentSession = currentSession; // 已读消息 小红点消失\n      // Vue.set(state.idDot, state.currentAdmin.username + '#' + state.currentSession.username, false)\n    },\n\n    addMessage(state, msg) {\n      let mss = state.sessions[state.currentAdmin.username + '#' + msg.to];\n\n      if (!mss) {\n        Vue.set(state.sessions, state.currentAdmin.username + '#' + msg.to, []);\n      }\n\n      state.sessions[state.currentAdmin.username + '#' + msg.to].push({\n        content: msg.content,\n        date: new Date(),\n        self: !msg.notSelf // 不是自己\n\n      });\n    },\n\n    INIT_DATA(state) {\n      // 浏览器本地的历史聊天记录\n      let data = localStorage.getItem('vue-chat-session');\n\n      if (data) {\n        state.sessions = JSON.parse(data);\n      }\n    },\n\n    // 初始化数据\n    INIT_ADMINS(state, data) {\n      state.admins = data;\n    }\n\n  },\n  // 异步执行\n  actions: {\n    //  在线聊天; context 上下文\n    connect(context) {\n      let token = window.sessionStorage.getItem('tokenStr');\n      context.state.ws = new WebSocket(\"ws://localhost:3000\");\n\n      context.state.ws.onopen = function () {\n        console.log('连接成功！');\n        let obj = new Object();\n        obj.token = token;\n        context.state.ws.send(JSON.stringify(obj));\n      };\n\n      context.state.ws.onmessage = function (e) {\n        console.log(e.data, '!!');\n\n        if (e.data == 401) {\n          Vue.$router.replace('/');\n        }\n\n        let receiveMsg = JSON.parse(e.data);\n        receiveMsg.notSelf = true;\n        receiveMsg.to = receiveMsg.from;\n        context.commit('addMessage', receiveMsg);\n      }; // let msg = {\n      //     to: '',\n      //     form: '',\n      //     data: '',\n      //     name: ''\n      // }\n      // let token = window.sessionStorage.getItem('tokenStr')\n      // context.state.stomp.connect({ 'Auth-Token': token }, success => {\n      // }, error => {\n      // })\n      // context.state.stomp = Stomp.over(new SockJS('/ws/ep')) // 连接端点\n      // let token = window.sessionStorage.getItem('tokenStr')\n      // context.state.stomp.connect({ 'Auth-Token': token }, success => { // 把 token 放进去\n      //     context.state.stomp.subscribe('/user/queue/chat', msg => { // 订阅消息频道\n      //         // console.log(msg.body)\n      //         let receiveMsg = JSON.parse(msg.body)\n      //         // 有消息发来，右下角 弹框提示\n      //         if (!context.state.currentSession || receiveMsg.from !== context.state.currentSession.username) {\n      //             Notification.info({\n      //                 title: '【' + receiveMsg.formNickName + '】发来一条消息',\n      //                 message: receiveMsg.content.length > 10 ? receiveMsg.content.substr(0, 10) : receiveMsg.content,\n      //                 position: 'bottom-right'\n      //             })\n      //             // 有未读消息 展示小红点\n      //             Vue.set(context.state.idDot, context.state.currentAdmin.username + '#' + receiveMsg.from, true)\n      //         }\n      //         receiveMsg.notSelf = true\n      //         receiveMsg.to = receiveMsg.from\n      //         context.commit('addMessage', receiveMsg) // 接收\n      //     })\n      // }, error => {\n      // })\n\n    },\n\n    initData(context) {\n      context.commit('INIT_DATA'); // 调用接口获取数据\n\n      const temp = {\n        id: JSON.parse(window.sessionStorage.getItem('user'))[0].id\n      };\n      postRequest('/chat/admin', temp).then(resp => {\n        if (resp) {\n          context.commit('INIT_ADMINS', resp);\n        }\n      });\n    }\n\n  }\n});\nstore.watch(function (state) {\n  return state.sessions;\n}, function (val) {\n  console.log('CHANGE: ', val);\n  localStorage.setItem('vue-chat-session', JSON.stringify(val));\n}, {\n  deep: true\n  /*这个貌似是开启watch监测的判断,官方说明也比较模糊*/\n\n});\nexport default store;","map":{"version":3,"names":["Vue","Vuex","postRequest","use","now","Date","store","Store","state","routes","sessions","admins","currentAdmin","JSON","parse","window","sessionStorage","getItem","currentSession","filterKey","ws","idDot","mutations","INIT_ADMIN","admin","initRoutes","data","changeCurrentSession","addMessage","msg","mss","username","to","set","push","content","date","self","notSelf","INIT_DATA","localStorage","INIT_ADMINS","actions","connect","context","token","WebSocket","onopen","console","log","obj","Object","send","stringify","onmessage","e","$router","replace","receiveMsg","from","commit","initData","temp","id","then","resp","watch","val","setItem","deep"],"sources":["E:/web-code/yeb/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport { postRequest } from '../utils/api'\r\n// import SockJS from 'sockjs-client'\r\n// import Stomp from 'stompjs'\r\n\r\nVue.use(Vuex)\r\n\r\nconst now = new Date()\r\n\r\nconst store = new Vuex.Store({\r\n    state: {\r\n        routes: [],\r\n        sessions: {}, // 聊天信息 'zhangsan#lisi':[{}]\r\n        admins: [], // 左侧用户列表\r\n        currentAdmin: JSON.parse(window.sessionStorage.getItem('user'))[0], // 当前用户\r\n        currentSession: null, //  选中的用户对象\r\n        filterKey: '',\r\n        ws: null, // 在线聊天-定义对象\r\n        idDot: {} // 未读消息 对象\r\n    },\r\n\r\n    mutations: { // 与 state 同步执行；可以改变 state 对应的值的方法\r\n        // 编辑用户 同步用户信息\r\n        INIT_ADMIN(state, admin) {\r\n            state.currentAdmin = admin\r\n        },\r\n        // 初始化路由 菜单\r\n        initRoutes(state, data) {\r\n            state.routes = data\r\n        },\r\n        changeCurrentSession(state, currentSession) {\r\n            state.currentSession = currentSession\r\n            // 已读消息 小红点消失\r\n            // Vue.set(state.idDot, state.currentAdmin.username + '#' + state.currentSession.username, false)\r\n        },\r\n        addMessage(state, msg) {\r\n            let mss = state.sessions[state.currentAdmin.username + '#' + msg.to]\r\n            if (!mss) {\r\n                Vue.set(state.sessions, state.currentAdmin.username + '#' + msg.to, [])\r\n            }\r\n            state.sessions[state.currentAdmin.username + '#' + msg.to].push\r\n                ({\r\n                    content: msg.content,\r\n                    date: new Date(),\r\n                    self: !msg.notSelf // 不是自己\r\n                })\r\n        },\r\n        INIT_DATA(state) {\r\n            // 浏览器本地的历史聊天记录\r\n            let data = localStorage.getItem('vue-chat-session');\r\n            if (data) {\r\n                state.sessions = JSON.parse(data)\r\n            }\r\n        },\r\n        // 初始化数据\r\n        INIT_ADMINS(state, data) {\r\n            state.admins = data\r\n        }\r\n    },\r\n\r\n    // 异步执行\r\n    actions: {\r\n        //  在线聊天; context 上下文\r\n        connect(context) {\r\n            let token = window.sessionStorage.getItem('tokenStr')\r\n            context.state.ws = new WebSocket(\"ws://localhost:3000\")\r\n            context.state.ws.onopen = function () {\r\n                console.log('连接成功！')\r\n                let obj = new Object()\r\n                obj.token = token\r\n                context.state.ws.send(JSON.stringify(obj))\r\n            }\r\n            context.state.ws.onmessage = function (e) {\r\n                console.log(e.data, '!!')\r\n                if (e.data == 401) {\r\n                    Vue.$router.replace('/')\r\n                }\r\n                let receiveMsg = JSON.parse(e.data)\r\n                receiveMsg.notSelf = true\r\n                receiveMsg.to = receiveMsg.from\r\n                context.commit('addMessage', receiveMsg)\r\n            }\r\n            // let msg = {\r\n            //     to: '',\r\n            //     form: '',\r\n            //     data: '',\r\n            //     name: ''\r\n            // }\r\n\r\n\r\n\r\n\r\n            // let token = window.sessionStorage.getItem('tokenStr')\r\n            // context.state.stomp.connect({ 'Auth-Token': token }, success => {\r\n\r\n            // }, error => {\r\n\r\n            // })\r\n\r\n            // context.state.stomp = Stomp.over(new SockJS('/ws/ep')) // 连接端点\r\n            // let token = window.sessionStorage.getItem('tokenStr')\r\n            // context.state.stomp.connect({ 'Auth-Token': token }, success => { // 把 token 放进去\r\n            //     context.state.stomp.subscribe('/user/queue/chat', msg => { // 订阅消息频道\r\n            //         // console.log(msg.body)\r\n            //         let receiveMsg = JSON.parse(msg.body)\r\n            //         // 有消息发来，右下角 弹框提示\r\n            //         if (!context.state.currentSession || receiveMsg.from !== context.state.currentSession.username) {\r\n            //             Notification.info({\r\n            //                 title: '【' + receiveMsg.formNickName + '】发来一条消息',\r\n            //                 message: receiveMsg.content.length > 10 ? receiveMsg.content.substr(0, 10) : receiveMsg.content,\r\n            //                 position: 'bottom-right'\r\n            //             })\r\n            //             // 有未读消息 展示小红点\r\n            //             Vue.set(context.state.idDot, context.state.currentAdmin.username + '#' + receiveMsg.from, true)\r\n            //         }\r\n            //         receiveMsg.notSelf = true\r\n            //         receiveMsg.to = receiveMsg.from\r\n            //         context.commit('addMessage', receiveMsg) // 接收\r\n            //     })\r\n            // }, error => {\r\n            // })\r\n        },\r\n        initData(context) {\r\n            context.commit('INIT_DATA')\r\n            // 调用接口获取数据\r\n            const temp = {\r\n                id: JSON.parse(window.sessionStorage.getItem('user'))[0].id\r\n            }\r\n            postRequest('/chat/admin', temp).then(resp => {\r\n                if (resp) {\r\n                    context.commit('INIT_ADMINS', resp)\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\nstore.watch(function (state) {\r\n    return state.sessions\r\n}, function (val) {\r\n    console.log('CHANGE: ', val)\r\n    localStorage.setItem('vue-chat-session', JSON.stringify(val));\r\n}, {\r\n    deep: true/*这个貌似是开启watch监测的判断,官方说明也比较模糊*/\r\n})\r\nexport default store"],"mappings":"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"},"metadata":{},"sourceType":"module"}